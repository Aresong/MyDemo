<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Spring入门配置 -->
    <!-- 就把这个类交给Spring去管理 -->
    <bean id="userDao" class="com.s5.spring.demo1.UserDaoImpl">
        <property name="name" value="王东"></property>
    </bean>

    <!-- Spring Bean生命周期配置 -->
    <!-- 多例struts2和spring整合的时候一定会用到，因为struts2是多例的，一次请求创建一个action，同时创建一个值栈，如果是单例的同时存取会出错 -->
    <bean id="customerDao" class="com.s5.spring.demo2.CustomerDaoImpl" init-method="setup" destroy-method="destroy"
          scope="prototype">
    </bean>

    <!-- Spring的属性注入的方式 -->
    <!-- 1.构造方法的方式 -->
    <bean id="car" class="com.s5.spring.demo4.Car">
        <constructor-arg name="name" value="奔驰"/>
        <constructor-arg name="price" value="800000"/>
    </bean>
    <!-- 2.set方法注入的方式 -->
    <!-- bean id="car2" class="com.s5.spring.demo4.Car2">
        <property name="name" value="大众"/>
        <property name="price" value="200000"/>
    </bean -->

    <!-- 改为p名称空间的方式 -->
    <!-- bean id="car2" class="com.s5.spring.demo4.Car2" p:name="奇瑞qq" p:price="50000"></bean -->

    <!-- 3.set方法注入对象类型的属性 -->
    <!-- bean id="employee" class="com.s5.spring.demo4.Employee" -->
    <!-- value:设置普通类型的值，ref：设置其他类型的id或name -->
    <!--property name="name" value="曹格"/>
    <property name="car2" ref="car2"/>
</bean -->

    <!-- bean id="employeesb" class="com.s5.spring.demo4.Employee" p:name="张三" p:car2-ref="car2"/ -->

    <!-- spel的属性注入 -->

    <bean id="carInfo" class="com.s5.spring.demo4.CarInfo">
    </bean>

    <bean id="car2" class="com.s5.spring.demo4.Car2">
        <property name="name" value="#{carInfo.name}"/>
        <property name="price" value="#{carInfo.calculatorPrice()}"/>
    </bean>

    <bean id="employeesb" class="com.s5.spring.demo4.Employee">
        <property name="name" value="#{'赵大宝'}"/>
        <property name="car2" value="#{car2}"/>
    </bean>

    <import resource="applicationContext2.xml"/>

</beans>
